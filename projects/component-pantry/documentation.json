{
    "pipes": [],
    "interfaces": [],
    "injectables": [],
    "guards": [],
    "interceptors": [],
    "classes": [],
    "directives": [],
    "components": [],
    "modules": [],
    "miscellaneous": {
        "variables": [
            {
                "name": "Basic",
                "ctype": "miscellaneous",
                "subtype": "variable",
                "file": "projects/component-pantry/src/stories/autocomplete.stories.ts",
                "deprecated": false,
                "deprecationMessage": "",
                "type": "Story",
                "defaultValue": "{\r\n    args: {\r\n        inputSize: 'medium',\r\n        label: 'Autocomplete Field (Dynamic)',\r\n        placeholder: 'Search Keyword',\r\n        autocompleteData: dummyDataCountry,\r\n        leftIconSvg: `<svg viewBox=\"0 0 24 24\" fill=\"none\" xmlns=\"http://www.w3.org/2000/svg\" width=\"20px\">\r\n            <path d=\"M15.7955 15.8111L21 21M18 10.5C18 14.6421 14.6421 18 10.5 18C6.35786 18 3 14.6421 3 10.5C3 6.35786 6.35786 3 10.5 3C14.6421 3 18 6.35786 18 10.5Z\" stroke-width=\"2\" stroke-linecap=\"round\" stroke-linejoin=\"round\" />\r\n        </svg>`,\r\n        rightIconSvg: `<svg width=\"15\" viewBox=\"0 0 18 10\" fill=\"none\" xmlns=\"http://www.w3.org/2000/svg\">\r\n        <path \r\n          clip-rule=\"evenodd\"\r\n          d=\"M9.53033 9.28033C9.23744 9.57322 8.76256 9.57322 8.46967 9.28033L0.96967 1.78033C0.676777 1.48744 0.676777 1.01256 0.96967 0.719671C1.26256 0.426777 1.73744 0.426777 2.03033 0.719671L9 7.68934L15.9697 0.71967C16.2626 0.426777 16.7374 0.426777 17.0303 0.71967C17.3232 1.01256 17.3232 1.48744 17.0303 1.78033L9.53033 9.28033Z\" \r\n        >\r\n        </path>\r\n      </svg>`,\r\n    },\r\n    render: (args) => ({\r\n        props: args,\r\n        template: `\r\n            <nctv-card [shadowLevel]=\"shadowLevel\" [size]=\"auto\">\r\n                <nctv-autocomplete\r\n                    [inputSize]=\"inputSize\"\r\n                    [label]=\"label\"\r\n                    [placeholder]=\"placeholder\"\r\n                    [autocompleteData]=\"autocompleteData\"\r\n                    [leftIconSvg]=\"leftIconSvg\"\r\n                    [rightIconSvg]=\"rightIconSvg\"\r\n                >\r\n                </nctv-autocomplete>\r\n            </nctv-card>\r\n        `,\r\n    }),\r\n}"
            },
            {
                "name": "Basic",
                "ctype": "miscellaneous",
                "subtype": "variable",
                "file": "projects/component-pantry/src/stories/card.stories.ts",
                "deprecated": false,
                "deprecationMessage": "",
                "type": "Story",
                "defaultValue": "{\r\n    args: {\r\n        shadowLevel: 1,\r\n        backgroundColor: '#fff',\r\n    },\r\n    render: (args) => ({\r\n        props: args,\r\n        template: `\r\n            <nctv-card [shadowLevel]=\"shadowLevel\" [backgroundColor]=\"backgroundColor\">\r\n                <div [style.margin-bottom.px]=\"'20'\">\r\n                    <nctv-text\r\n                    [textType]=\"'larger'\"\r\n                    [textContent]=\"'Hello World!'\">\r\n                    </nctv-text>\r\n                </div>\r\n\r\n                <div>\r\n                    <nctv-text\r\n                    [textContent]=\"'Lorem ipsum keme keme keme 48 years chaka at bakit na ugmas mabaho nang kasi balaj sa na pranella jupang-pang shontis chapter jowabella at ang chaka at nang guash matod kasi nakakalurky na ang neuro na warla nang ugmas wasok nang shonget ang chapter , kemerloo ang shontis ng at ang intonses at nang wasok oblation sa nang 48 years shontis at bakit mahogany bongga.'\">\r\n                    </nctv-text>\r\n                </div>\r\n            </nctv-card>\r\n        `,\r\n    }),\r\n}"
            },
            {
                "name": "Basic",
                "ctype": "miscellaneous",
                "subtype": "variable",
                "file": "projects/component-pantry/src/stories/input.stories.ts",
                "deprecated": false,
                "deprecationMessage": "",
                "type": "Story",
                "defaultValue": "{\r\n    args: {\r\n        inputSize: 'medium',\r\n        label: 'Input Label',\r\n        placeholder: 'Default Input Placeholder'\r\n    },\r\n    render: (args) => ({\r\n        props: args,\r\n        template: `\r\n            <nctv-card [shadowLevel]=\"shadowLevel\">\r\n               <nctv-input [label]=\"label\" [inputSize]=\"inputSize\" [placeholder]=\"placeholder\"></nctv-input>\r\n            </nctv-card>\r\n        `,\r\n    }),\r\n}"
            },
            {
                "name": "Basic",
                "ctype": "miscellaneous",
                "subtype": "variable",
                "file": "projects/component-pantry/src/stories/stepper.stories.ts",
                "deprecated": false,
                "deprecationMessage": "",
                "type": "Story",
                "defaultValue": "{\r\n    args: {\r\n        orientation: 'vertical' as unknown as InputSignal<string>,\r\n        clickable: true as unknown as InputSignal<boolean>,\r\n        showSteps: true as unknown as InputSignal<boolean>,\r\n        steps: [\r\n            { label: 'Create Screen', completed: true },\r\n            { label: 'Choose Template', completed: false },\r\n            { label: 'Assign Playlist', completed: false },\r\n            { label: 'Assign Host', completed: true },\r\n            { label: 'Assign Dealer', completed: true },\r\n        ] as unknown as InputSignal<{ label: string; completed: boolean }[]>,\r\n        currentStep: 0,\r\n    },\r\n    render: (args) => ({\r\n        props: {\r\n            ...args,\r\n            onNext: () => {\r\n                if (args.currentStep < args.steps.length - 1) {\r\n                    args.currentStep += 1;\r\n                }\r\n            },\r\n            onBack: () => {\r\n                if (args.currentStep > 0) {\r\n                    args.currentStep -= 1;\r\n                }\r\n            },\r\n        },\r\n        template: `\r\n        <ng-container>\r\n            <div *ngIf=\"orientation === 'vertical'; else horizontalOrientation\" style=\"height: 500px;\">\r\n                <nctv-card [cardSize]=\"'fit-content'\" [backgroundColor]=\"'#091635'\">\r\n                    <div style=\"display: flex; gap: 10px; height: 100%; flex-direction: column; align-items:center;\">\r\n\r\n\r\n                        <div style=\"height: 100%;\">\r\n                            <nctv-stepper\r\n                                [clickable]=\"clickable\"\r\n                                [steps]=\"steps\"\r\n                                [showSteps]=\"showSteps\"\r\n                                [(currentStep)]=\"currentStep\"\r\n                                (finished)=\"onFinish()\"\r\n                                [orientation]=\"orientation\">\r\n                            </nctv-stepper>\r\n                        </div>\r\n                        \r\n                    </div>\r\n                </nctv-card>\r\n            </div>\r\n\r\n\r\n            <ng-template #horizontalOrientation>\r\n                <nctv-card>\r\n                    <div style=\"display: flex; gap: 10px; flex-direction: column;\">\r\n                        <nctv-stepper\r\n                            [clickable]=\"clickable\"\r\n                            [steps]=\"steps\"\r\n                            [showSteps]=\"showSteps\"\r\n                            [(currentStep)]=\"currentStep\"\r\n                            (finished)=\"onFinish()\"\r\n                            [orientation]=\"orientation\">\r\n                        </nctv-stepper>\r\n                    </div>\r\n                </nctv-card>\r\n            </ng-template>\r\n        </ng-container>\r\n\r\n      \r\n        `,\r\n    }),\r\n}"
            },
            {
                "name": "Basic",
                "ctype": "miscellaneous",
                "subtype": "variable",
                "file": "projects/component-pantry/src/stories/table.stories.ts",
                "deprecated": false,
                "deprecationMessage": "",
                "type": "Story",
                "defaultValue": "{\r\n    args: {\r\n        tableData: dummyData,\r\n    },\r\n    render: (args) => ({\r\n        props: args,\r\n        template: `\r\n            <nctv-card [shadowLevel]=\"shadowLevel\">\r\n                <nctv-table [tableData]=\"tableData\" [columnType]=\"columnType\"></nctv-table>\r\n            </nctv-card>\r\n        `,\r\n    }),\r\n}"
            },
            {
                "name": "BoldColored",
                "ctype": "miscellaneous",
                "subtype": "variable",
                "file": "projects/component-pantry/src/stories/text.stories.ts",
                "deprecated": false,
                "deprecationMessage": "",
                "type": "Story",
                "defaultValue": "{\r\n    args: {\r\n        textContent: 'Wow such color, much thick!',\r\n        textType: 'large',\r\n        textColor: '#098a5a',\r\n        fontWeight: 'bold',\r\n    },\r\n}"
            },
            {
                "name": "CustomBackground",
                "ctype": "miscellaneous",
                "subtype": "variable",
                "file": "projects/component-pantry/src/stories/card.stories.ts",
                "deprecated": false,
                "deprecationMessage": "",
                "type": "Story",
                "defaultValue": "{\r\n    args: {\r\n        shadowLevel: 5,\r\n        backgroundColor: '#224d32',\r\n    },\r\n    render: (args) => ({\r\n        props: args,\r\n        template: `\r\n            <nctv-card [shadowLevel]=\"shadowLevel\" [backgroundColor]=\"backgroundColor\">\r\n                <div [style.margin-bottom.px]=\"'20'\">\r\n                    <nctv-text\r\n                    [textColor]=\"'#fff'\"\r\n                    [textType]=\"'larger'\"\r\n                    [textContent]=\"'Hello World!'\">\r\n                    </nctv-text>\r\n                </div>\r\n\r\n                <div [style.margin-bottom.px]=\"'20'\">\r\n                    <nctv-text\r\n                    [textColor]=\"'#fff'\"\r\n                    [textContent]=\"'Lorem ipsum keme keme keme 48 years chaka at bakit na ugmas mabaho nang kasi balaj sa na pranella jupang-pang shontis chapter jowabella at ang chaka at nang guash matod kasi nakakalurky na ang neuro na warla nang ugmas wasok nang shonget ang chapter , kemerloo ang shontis ng at ang intonses at nang wasok oblation sa nang 48 years shontis at bakit mahogany bongga.'\"\r\n                    [textType]=\"'paragraph'\">\r\n                    </nctv-text>\r\n                </div>\r\n\r\n\r\n                <nctv-button\r\n                [label]=\"'Purchase'\"\r\n                [textColor]=\"'#fff'\"\r\n                [type]=\"'success'\"\r\n                ></nctv-button>\r\n            </nctv-card>\r\n        `,\r\n    }),\r\n}"
            },
            {
                "name": "CustomFontSize",
                "ctype": "miscellaneous",
                "subtype": "variable",
                "file": "projects/component-pantry/src/stories/text.stories.ts",
                "deprecated": false,
                "deprecationMessage": "",
                "type": "Story",
                "defaultValue": "{\r\n    args: {\r\n        textContent: 'Such amaze, many font size!',\r\n        fontSize: 50,\r\n        textColor: '#342abd',\r\n    },\r\n}"
            },
            {
                "name": "CustomPaddings",
                "ctype": "miscellaneous",
                "subtype": "variable",
                "file": "projects/component-pantry/src/stories/card.stories.ts",
                "deprecated": false,
                "deprecationMessage": "",
                "type": "Story",
                "defaultValue": "{\r\n    args: {\r\n        shadowLevel: 5,\r\n        backgroundColor: '#fff',\r\n    },\r\n    render: (args) => ({\r\n        props: args,\r\n        template: `\r\n            <nctv-card [shadowLevel]=\"shadowLevel\" [backgroundColor]=\"backgroundColor\" [sidePadding]=\"50\">\r\n                <div [style.margin-bottom.px]=\"'20'\">\r\n                    <nctv-text\r\n                    [textType]=\"'larger'\"\r\n                    [textContent]=\"'Hello World!'\">\r\n                    </nctv-text>\r\n                </div>\r\n\r\n                <div>\r\n                    <nctv-text\r\n                    [textContent]=\"'Lorem ipsum keme keme keme 48 years chaka at bakit na ugmas mabaho nang kasi balaj sa na pranella jupang-pang shontis chapter jowabella at ang chaka at nang guash matod kasi nakakalurky na ang neuro na warla nang ugmas wasok nang shonget ang chapter , kemerloo ang shontis ng at ang intonses at nang wasok oblation sa nang 48 years shontis at bakit mahogany bongga.'\"\r\n                    [textType]=\"'paragraph'\">\r\n                    </nctv-text>\r\n                </div>\r\n            </nctv-card>\r\n        `,\r\n    }),\r\n}"
            },
            {
                "name": "Danger",
                "ctype": "miscellaneous",
                "subtype": "variable",
                "file": "projects/component-pantry/src/stories/button.stories.ts",
                "deprecated": false,
                "deprecationMessage": "",
                "type": "Story",
                "defaultValue": "{\r\n    args: {\r\n        label: 'Delete',\r\n        type: 'danger',\r\n    },\r\n}"
            },
            {
                "name": "DemoAutocomplete",
                "ctype": "miscellaneous",
                "subtype": "variable",
                "file": "projects/component-pantry/src/stories/autocomplete.stories.ts",
                "deprecated": false,
                "deprecationMessage": "",
                "type": "Story",
                "defaultValue": "{\r\n    args: {\r\n        inputSize: 'medium',\r\n        label: 'Autocomplete Field (Dynamic)',\r\n        placeholder: 'Autocomplete Field Placeholder (Dynamic)',\r\n\r\n        autocompleteData: dummyDataCountry,\r\n    },\r\n    render: (args) => ({\r\n        props: args,\r\n        template: `\r\n            <nctv-card [shadowLevel]=\"shadowLevel\">\r\n              <div style=\"display: flex; gap: 20px;\">\r\n                <nctv-autocomplete [inputSize]=\"inputSize\" style=\"width: 100%;\" [placeholder]=\"placeholder\" [autocompleteData]=\"autocompleteData\">\r\n                </nctv-autocomplete>\r\n\r\n                <nctv-autocomplete [inputSize]=\"inputSize\" style=\"width: 100%;\" [label]=\"'Second autocomplete (Static)'\" [placeholder]=\"'Select animal (Static)'\" [autocompleteData]=\"[{id: '1', name: 'Lion', species: 'Panthera leo'}, {id: '2', name: 'Tiger', species: 'Panthera tigris'}, {id: '3', name: 'Elephant', species: 'Loxodonta'}, {id: '4', name: 'Giraffe', species: 'Giraffa camelopardalis'}, {id: '5', name: 'Zebra', species: 'Equus zebra'}]\">\r\n                </nctv-autocomplete>\r\n              </div>\r\n            </nctv-card>\r\n        `,\r\n    }),\r\n}"
            },
            {
                "name": "Disabled",
                "ctype": "miscellaneous",
                "subtype": "variable",
                "file": "projects/component-pantry/src/stories/button.stories.ts",
                "deprecated": false,
                "deprecationMessage": "",
                "type": "Story",
                "defaultValue": "{\r\n    args: {\r\n        label: 'Not Allowed',\r\n        disabled: true,\r\n    },\r\n}"
            },
            {
                "name": "dummyData",
                "ctype": "miscellaneous",
                "subtype": "variable",
                "file": "projects/component-pantry/src/stories/table.stories.ts",
                "deprecated": false,
                "deprecationMessage": "",
                "type": "object",
                "defaultValue": "{\r\n    columns: [\r\n        { label: '#', sortable: false },\r\n        { label: 'Host Name', sortable: false },\r\n        { label: 'Dealer Name', sortable: false },\r\n        { label: 'Address', sortable: true },\r\n        { label: 'City', sortable: true },\r\n        { label: 'State', sortable: true },\r\n        { label: 'Postal Code', sortable: true },\r\n        { label: 'Timezone', sortable: true },\r\n        { label: 'Total License', sortable: true },\r\n    ],\r\n    rows: [\r\n        [\r\n            {\r\n                value: 1,\r\n            },\r\n            {\r\n                value: 'Amazon Data Center',\r\n            },\r\n            {\r\n                value: 'Sunrise Motors Inc.',\r\n            },\r\n            {\r\n                value: '456 Elm Street Apt. 201',\r\n            },\r\n            {\r\n                value: 'Seattle',\r\n            },\r\n            {\r\n                value: 'Washington',\r\n            },\r\n            {\r\n                value: '98101',\r\n            },\r\n            {\r\n                value: 'Pacific',\r\n            },\r\n            {\r\n                value: 15,\r\n            },\r\n        ],\r\n        [\r\n            {\r\n                value: 2,\r\n            },\r\n            {\r\n                value: 'Microsoft Headquarters',\r\n            },\r\n            {\r\n                value: 'Sunset Electronics',\r\n            },\r\n            {\r\n                value: '789 Oak Avenue',\r\n            },\r\n            {\r\n                value: 'Redmond',\r\n            },\r\n            {\r\n                value: 'Washington',\r\n            },\r\n            {\r\n                value: '98052',\r\n            },\r\n            {\r\n                value: 'Pacific',\r\n            },\r\n            {\r\n                value: 20,\r\n            },\r\n        ],\r\n        [\r\n            {\r\n                value: 3,\r\n            },\r\n            {\r\n                value: 'Googleplex',\r\n            },\r\n            {\r\n                value: 'Skyline Solutions',\r\n            },\r\n            {\r\n                value: '123 Maple Street',\r\n            },\r\n            {\r\n                value: 'Mountain View',\r\n            },\r\n            {\r\n                value: 'California',\r\n            },\r\n            {\r\n                value: '94043',\r\n            },\r\n            {\r\n                value: 'Eastern',\r\n            },\r\n            {\r\n                value: 30,\r\n            },\r\n        ],\r\n        [\r\n            {\r\n                value: 4,\r\n            },\r\n            {\r\n                value: 'Apple Park',\r\n            },\r\n            {\r\n                value: 'Orchard Technologies',\r\n            },\r\n            {\r\n                value: '567 Pine Road',\r\n            },\r\n            {\r\n                value: 'Cupertino',\r\n            },\r\n            {\r\n                value: 'California',\r\n            },\r\n            {\r\n                value: '95014',\r\n            },\r\n            {\r\n                value: 'Mountain',\r\n            },\r\n            {\r\n                value: 25,\r\n            },\r\n        ],\r\n        [\r\n            {\r\n                value: 5,\r\n            },\r\n            {\r\n                value: 'Facebook Campus',\r\n            },\r\n            {\r\n                value: 'Social Solutions',\r\n            },\r\n            {\r\n                value: '101 Cedar Lane',\r\n            },\r\n            {\r\n                value: 'Menlo Park',\r\n            },\r\n            {\r\n                value: 'California',\r\n            },\r\n            {\r\n                value: '94025',\r\n            },\r\n            {\r\n                value: 'Pacific',\r\n            },\r\n            {\r\n                value: 18,\r\n            },\r\n        ],\r\n    ],\r\n}"
            },
            {
                "name": "dummyDataCountry",
                "ctype": "miscellaneous",
                "subtype": "variable",
                "file": "projects/component-pantry/src/stories/autocomplete.stories.ts",
                "deprecated": false,
                "deprecationMessage": "",
                "type": "[]",
                "defaultValue": "[\r\n    { id: 'abc123', name: 'Afghanistan', code: 'AF' },\r\n    { id: 'def456', name: 'Åland Islands', code: 'AX' },\r\n    { id: 'ghi789', name: 'Albania', code: 'AL' },\r\n    { id: 'jkl012', name: 'Algeria', code: 'DZ' },\r\n    { id: 'mno345', name: 'American Samoa', code: 'AS' },\r\n    { id: 'pqr678', name: 'AndorrA', code: 'AD' },\r\n]"
            },
            {
                "name": "Ellipsis",
                "ctype": "miscellaneous",
                "subtype": "variable",
                "file": "projects/component-pantry/src/stories/table.stories.ts",
                "deprecated": false,
                "deprecationMessage": "",
                "type": "Story",
                "defaultValue": "{\r\n    args: {\r\n        tableData: dummyData,\r\n        columnType: 'ellipsis',\r\n    },\r\n    render: (args) => ({\r\n        props: args,\r\n        template: `\r\n            <nctv-card [shadowLevel]=\"shadowLevel\">\r\n                <nctv-table [tableData]=\"tableData\" [columnType]=\"columnType\"></nctv-table>\r\n            </nctv-card>\r\n        `,\r\n    }),\r\n}"
            },
            {
                "name": "Larger",
                "ctype": "miscellaneous",
                "subtype": "variable",
                "file": "projects/component-pantry/src/stories/text.stories.ts",
                "deprecated": false,
                "deprecationMessage": "",
                "type": "Story",
                "defaultValue": "{\r\n    args: {\r\n        textContent: 'Dis large, such heavy',\r\n        textType: 'larger',\r\n    },\r\n}"
            },
            {
                "name": "meta",
                "ctype": "miscellaneous",
                "subtype": "variable",
                "file": "projects/component-pantry/src/stories/autocomplete.stories.ts",
                "deprecated": false,
                "deprecationMessage": "",
                "type": "Meta<AutocompleteComponent>",
                "defaultValue": "{\r\n    title: 'Components/Autocomplete',\r\n    component: AutocompleteComponent,\r\n    decorators: [\r\n        moduleMetadata({\r\n            imports: [CommonModule, CardComponent, InputComponent, ButtonComponent],\r\n        }),\r\n    ],\r\n    tags: ['autodocs'],\r\n    parameters: {},\r\n    argTypes: {\r\n        inputSize: {\r\n            control: 'select',\r\n            description: 'Used to set input size.',\r\n            options: INPUT_SIZE,\r\n            table: {\r\n                defaultValue: {\r\n                    summary: 'medium',\r\n                },\r\n            },\r\n        },\r\n        leftIconSvg: {\r\n            control: {\r\n                type: 'text', // Use the 'text' control for SVG input\r\n                // Optional, but recommended for a better UX:\r\n                labels: {\r\n                    control: 'Left Icon SVG',\r\n                    description: 'Input the SVG code for the left icon.',\r\n                },\r\n            },\r\n        },\r\n        rightIconSvg: {\r\n            control: {\r\n                type: 'text',\r\n                // Optional labels for better UX:\r\n                labels: {\r\n                    control: 'Right Icon SVG',\r\n                    description: 'Input the SVG code for the right icon.',\r\n                },\r\n            },\r\n        },\r\n    },\r\n}"
            },
            {
                "name": "meta",
                "ctype": "miscellaneous",
                "subtype": "variable",
                "file": "projects/component-pantry/src/stories/button.stories.ts",
                "deprecated": false,
                "deprecationMessage": "",
                "type": "Meta<ButtonComponent>",
                "defaultValue": "{\r\n    title: 'Components/Button',\r\n    component: ButtonComponent,\r\n    tags: ['autodocs'],\r\n    argTypes: {\r\n        backgroundColor: {\r\n            control: 'color',\r\n            description:\r\n                'Used to force set the background color. Note that this does not influence hover and active states unless explicitly configured.',\r\n        },\r\n        disabled: {\r\n            control: 'boolean',\r\n            description: 'Disabled state. Accepts true or false value.',\r\n            table: {\r\n                defaultValue: {\r\n                    summary: false,\r\n                },\r\n            },\r\n        },\r\n        iconLeft: {\r\n            control: 'text',\r\n            description: 'The icon to display on the left side of the label. Expected to be a valid icon reference.',\r\n        },\r\n        iconRight: {\r\n            control: 'text',\r\n            description: 'The icon to display on the right side of the label. Expected to be a valid icon reference.',\r\n        },\r\n        label: {\r\n            control: 'text',\r\n            description:\r\n                'The text to display on the button. This label can be anything from a simple string to complex HTML.',\r\n            table: {\r\n                defaultValue: {\r\n                    summary: 'Click Me',\r\n                },\r\n            },\r\n        },\r\n        size: {\r\n            control: 'select',\r\n            description: `Defines the size of the button. Accepted values are 'xsm', 'sm', 'lg', or 'normal'.`,\r\n            options: BUTTON_SIZES,\r\n            table: {\r\n                defaultValue: { summary: 'normal' },\r\n            },\r\n        },\r\n        textColor: {\r\n            control: 'color',\r\n            description:\r\n                'Used to force set the background color. Note: This does not influence hover and active states unless explicitly configured.',\r\n        },\r\n        type: {\r\n            control: 'select',\r\n            description: `Defines the type of the button, which influences its styling. Valid types are 'primary' and 'secondary'.`,\r\n            options: BUTTON_TYPES,\r\n            table: {\r\n                defaultValue: { summary: 'primary' },\r\n            },\r\n        },\r\n    },\r\n    args: {},\r\n}"
            },
            {
                "name": "meta",
                "ctype": "miscellaneous",
                "subtype": "variable",
                "file": "projects/component-pantry/src/stories/card.stories.ts",
                "deprecated": false,
                "deprecationMessage": "",
                "type": "Meta<CardComponent>",
                "defaultValue": "{\r\n    title: 'Components/Card',\r\n    component: CardComponent,\r\n    decorators: [\r\n        moduleMetadata({\r\n            imports: [CommonModule, ButtonComponent, TextComponent],\r\n        }),\r\n    ],\r\n    tags: ['autodocs'],\r\n    parameters: {},\r\n    argTypes: {\r\n        shadowLevel: {\r\n            control: 'select',\r\n            description: 'Used to set shadow level, the higher the value the more prominent the shadow is.',\r\n            options: CARD_SHADOWS,\r\n        },\r\n        backgroundColor: {\r\n            control: 'color',\r\n            description: 'Sets the background color of the card.',\r\n        },\r\n        cardSize: {\r\n            control: 'select',\r\n            description: 'Sets the side size of the card.',\r\n            options: CARD_SIZE,\r\n        },\r\n    },\r\n}"
            },
            {
                "name": "meta",
                "ctype": "miscellaneous",
                "subtype": "variable",
                "file": "projects/component-pantry/src/stories/input.stories.ts",
                "deprecated": false,
                "deprecationMessage": "",
                "type": "Meta<InputComponent>",
                "defaultValue": "{\r\n    title: 'Components/Input',\r\n    component: InputComponent,\r\n    decorators: [\r\n        moduleMetadata({\r\n            imports: [CommonModule, CardComponent],\r\n        }),\r\n    ],\r\n    tags: ['autodocs'],\r\n    parameters: {},\r\n    argTypes: {\r\n        inputSize: {\r\n            control: 'select',\r\n            description: 'Used to set input size.',\r\n            options: INPUT_SIZE,\r\n            table: {\r\n                defaultValue: {\r\n                    summary: 'medium',\r\n                },\r\n            },\r\n        },\r\n    },\r\n}"
            },
            {
                "name": "meta",
                "ctype": "miscellaneous",
                "subtype": "variable",
                "file": "projects/component-pantry/src/stories/stepper.stories.ts",
                "deprecated": false,
                "deprecationMessage": "",
                "type": "Meta<StepperComponent>",
                "defaultValue": "{\r\n    title: 'Components/Stepper',\r\n    component: StepperComponent,\r\n    decorators: [\r\n        moduleMetadata({\r\n            imports: [CommonModule, ButtonComponent, CardComponent],\r\n        }),\r\n    ],\r\n    tags: ['autodocs'],\r\n    parameters: {},\r\n    argTypes: {\r\n        orientation: {\r\n            control: 'select',\r\n            description: 'Used to select orientation.',\r\n            options: ORIENTATION,\r\n            table: {\r\n                defaultValue: {\r\n                    summary: 'horizontal',\r\n                },\r\n            },\r\n        },\r\n        showSteps: {\r\n            control: 'select',\r\n            description: 'Used to show the steps.',\r\n            options: SHOW_STEPS,\r\n            table: {\r\n                defaultValue: {\r\n                    summary: false,\r\n                },\r\n            },\r\n        },\r\n        clickable: {\r\n            control: 'select',\r\n            description: 'Used to make the steps clickable to go to a specific step.',\r\n            options: SHOW_STEPS,\r\n            table: {\r\n                defaultValue: {\r\n                    summary: false,\r\n                },\r\n            },\r\n        },\r\n    },\r\n}"
            },
            {
                "name": "meta",
                "ctype": "miscellaneous",
                "subtype": "variable",
                "file": "projects/component-pantry/src/stories/table.stories.ts",
                "deprecated": false,
                "deprecationMessage": "",
                "type": "Meta<TableComponent>",
                "defaultValue": "{\r\n    title: 'Components/Table',\r\n    component: TableComponent,\r\n    decorators: [\r\n        moduleMetadata({\r\n            imports: [CommonModule, CardComponent],\r\n        }),\r\n    ],\r\n    tags: ['autodocs'],\r\n    parameters: {},\r\n    argTypes: {\r\n        columnType: {\r\n            control: 'select',\r\n            description: 'Used to set table type.',\r\n            options: COLUMN_TYPE,\r\n            table: {\r\n                defaultValue: {\r\n                    summary: 'Full',\r\n                },\r\n            },\r\n        },\r\n        tableData: {\r\n            control: 'select',\r\n            description: 'Used to set shadow level, the higher the value the more prominent the shadow is.',\r\n        },\r\n    },\r\n}"
            },
            {
                "name": "meta",
                "ctype": "miscellaneous",
                "subtype": "variable",
                "file": "projects/component-pantry/src/stories/text.stories.ts",
                "deprecated": false,
                "deprecationMessage": "",
                "type": "Meta<TextComponent>",
                "defaultValue": "{\r\n    title: 'Components/Text',\r\n    component: TextComponent,\r\n    tags: ['autodocs'],\r\n    argTypes: {\r\n        fontSize: {\r\n            control: 'number',\r\n            description: `Specifies the font size of the text, overwrites the text type's font size (px). Accepts any valid CSS font-size value.`,\r\n        },\r\n        fontWeight: {\r\n            control: 'select',\r\n            description: `Specifies the font weight of the text, overwrites the text type's font weight.`,\r\n            options: FONT_WEIGHTS,\r\n            table: {\r\n                defaultValue: {\r\n                    summary: 'normal',\r\n                },\r\n            },\r\n        },\r\n        textColor: {\r\n            control: 'color',\r\n            description: 'Specifies the text color. Accepts any valid CSS color format.',\r\n        },\r\n        textContent: {\r\n            control: 'text',\r\n            description: 'The text content to be displayed. This is the actual text that appears in the component.',\r\n            table: {\r\n                defaultValue: {\r\n                    summary: 'This is a text',\r\n                },\r\n            },\r\n        },\r\n        textType: {\r\n            control: 'select',\r\n            description: 'Specifies the type of text with pre-set font-size and font-weight.',\r\n            options: TEXT_TYPES,\r\n            table: {\r\n                defaultValue: {\r\n                    summary: 'paragraph',\r\n                },\r\n            },\r\n        },\r\n    },\r\n    args: {},\r\n}"
            },
            {
                "name": "MultipleAutocomplete",
                "ctype": "miscellaneous",
                "subtype": "variable",
                "file": "projects/component-pantry/src/stories/autocomplete.stories.ts",
                "deprecated": false,
                "deprecationMessage": "",
                "type": "Story",
                "defaultValue": "{\r\n    args: {\r\n        inputSize: 'small',\r\n        label: 'Autocomplete Field (Dynamic)',\r\n        placeholder: 'Autocomplete Field Placeholder (Dynamic)',\r\n\r\n        autocompleteData: dummyDataCountry,\r\n    },\r\n    render: (args) => ({\r\n        props: args,\r\n        template: `\r\n        <nctv-card [shadowLevel]=\"shadowLevel\">\r\n            <div style=\"display: grid; grid-template-columns: repeat(auto-fit, minmax(250px, 1fr)); gap: 20px;\">\r\n                <nctv-autocomplete [inputSize]=\"inputSize\" [label]=\"label\" [placeholder]=\"placeholder\" [autocompleteData]=\"autocompleteData\">\r\n                </nctv-autocomplete>\r\n                \r\n                <nctv-input [label]=\"label\" [inputSize]=\"inputSize\" [placeholder]=\"placeholder\"></nctv-input>\r\n                \r\n                <nctv-input [label]=\"'I am a label (Static)'\" [inputSize]=\"inputSize\" [placeholder]=\"'I am a placeholder (Static)'\"></nctv-input>\r\n                \r\n                <nctv-input [label]=\"label\" [inputSize]=\"inputSize\" [placeholder]=\"placeholder\"></nctv-input>\r\n\r\n                <nctv-autocomplete [inputSize]=\"inputSize\" [label]=\"'Second autocomplete (Static)'\" [placeholder]=\"'Select animal (Static)'\" [autocompleteData]=\"[{id: '1', name: 'Lion', species: 'Panthera leo'}, {id: '2', name: 'Tiger', species: 'Panthera tigris'}, {id: '3', name: 'Elephant', species: 'Loxodonta'}, {id: '4', name: 'Giraffe', species: 'Giraffa camelopardalis'}, {id: '5', name: 'Zebra', species: 'Equus zebra'}]\">\r\n                </nctv-autocomplete>              \r\n                \r\n                <nctv-input [label]=\"'I am a label (Static)'\" [inputSize]=\"inputSize\" [placeholder]=\"'I am a placeholder (Static)'\"></nctv-input>\r\n                \r\n                <nctv-autocomplete [inputSize]=\"inputSize\" [label]=\"'Second autocomplete (Static)'\" [placeholder]=\"'Select animal (Static)'\" [autocompleteData]=\"[{id: '1', name: 'Lion', species: 'Panthera leo'}, {id: '2', name: 'Tiger', species: 'Panthera tigris'}, {id: '3', name: 'Elephant', species: 'Loxodonta'}, {id: '4', name: 'Giraffe', species: 'Giraffa camelopardalis'}, {id: '5', name: 'Zebra', species: 'Equus zebra'}]\">\r\n                </nctv-autocomplete>\r\n\r\n                <nctv-input [label]=\"'I am a label (Static)'\" [inputSize]=\"inputSize\" [placeholder]=\"'I am a placeholder (Static)'\"></nctv-input>\r\n                \r\n                <nctv-autocomplete [inputSize]=\"inputSize\" [label]=\"'Second autocomplete (Static)'\" [placeholder]=\"'Select animal (Static)'\" [autocompleteData]=\"[{id: '1', name: 'Lion', species: 'Panthera leo'}, {id: '2', name: 'Tiger', species: 'Panthera tigris'}, {id: '3', name: 'Elephant', species: 'Loxodonta'}, {id: '4', name: 'Giraffe', species: 'Giraffa camelopardalis'}, {id: '5', name: 'Zebra', species: 'Equus zebra'}]\">\r\n                </nctv-autocomplete>\r\n            </div>\r\n        </nctv-card>\r\n        `,\r\n    }),\r\n}"
            },
            {
                "name": "Paragraph",
                "ctype": "miscellaneous",
                "subtype": "variable",
                "file": "projects/component-pantry/src/stories/text.stories.ts",
                "deprecated": false,
                "deprecationMessage": "",
                "type": "Story",
                "defaultValue": "{\r\n    args: {\r\n        textContent: 'Eww such plain, much bored',\r\n        textType: 'paragraph',\r\n    },\r\n}"
            },
            {
                "name": "preview",
                "ctype": "miscellaneous",
                "subtype": "variable",
                "file": "projects/component-pantry/.storybook/preview.ts",
                "deprecated": false,
                "deprecationMessage": "",
                "type": "Preview",
                "defaultValue": "{\r\n    parameters: {\r\n        backgrounds: {\r\n            default: 'lightgray',\r\n            values: [\r\n                {\r\n                    name: 'lightgray',\r\n                    value: '#f0f0f0',\r\n                },\r\n                {\r\n                    name: 'twitter',\r\n                    value: '#00aced',\r\n                },\r\n                {\r\n                    name: 'facebook',\r\n                    value: '#3b5998',\r\n                },\r\n                {\r\n                    name: 'light',\r\n                    value: '#ffffff',\r\n                },\r\n                {\r\n                    name: 'dark',\r\n                    value: '#646c80',\r\n                },\r\n            ],\r\n        },\r\n        controls: {\r\n            matchers: {\r\n                color: /(background|color)$/i,\r\n                date: /Date$/i,\r\n            },\r\n        },\r\n    },\r\n}"
            },
            {
                "name": "Primary",
                "ctype": "miscellaneous",
                "subtype": "variable",
                "file": "projects/component-pantry/src/stories/button.stories.ts",
                "deprecated": false,
                "deprecationMessage": "",
                "type": "Story",
                "defaultValue": "{\r\n    args: {\r\n        type: 'primary',\r\n    },\r\n}"
            },
            {
                "name": "ShadowLevel3",
                "ctype": "miscellaneous",
                "subtype": "variable",
                "file": "projects/component-pantry/src/stories/card.stories.ts",
                "deprecated": false,
                "deprecationMessage": "",
                "type": "Story",
                "defaultValue": "{\r\n    args: {\r\n        shadowLevel: 3,\r\n        backgroundColor: '#fff',\r\n    },\r\n    render: (args) => ({\r\n        props: args,\r\n        template: `\r\n            <nctv-card [shadowLevel]=\"shadowLevel\" [backgroundColor]=\"backgroundColor\">\r\n                <div [style.margin-bottom.px]=\"'20'\">\r\n                    <nctv-text\r\n                    [textType]=\"'larger'\"\r\n                    [textContent]=\"'Hello World!'\">\r\n                    </nctv-text>\r\n                </div>\r\n\r\n                <div>\r\n                    <nctv-text\r\n                    [textContent]=\"'Lorem ipsum keme keme keme 48 years chaka at bakit na ugmas mabaho nang kasi balaj sa na pranella jupang-pang shontis chapter jowabella at ang chaka at nang guash matod kasi nakakalurky na ang neuro na warla nang ugmas wasok nang shonget ang chapter , kemerloo ang shontis ng at ang intonses at nang wasok oblation sa nang 48 years shontis at bakit mahogany bongga.'\">\r\n                    </nctv-text>\r\n                </div>\r\n            </nctv-card>\r\n        `,\r\n    }),\r\n}"
            },
            {
                "name": "Success",
                "ctype": "miscellaneous",
                "subtype": "variable",
                "file": "projects/component-pantry/src/stories/button.stories.ts",
                "deprecated": false,
                "deprecationMessage": "",
                "type": "Story",
                "defaultValue": "{\r\n    args: {\r\n        textColor: '#fff',\r\n        label: 'Purchase',\r\n        type: 'success',\r\n    },\r\n}"
            },
            {
                "name": "Wrap",
                "ctype": "miscellaneous",
                "subtype": "variable",
                "file": "projects/component-pantry/src/stories/table.stories.ts",
                "deprecated": false,
                "deprecationMessage": "",
                "type": "Story",
                "defaultValue": "{\r\n    args: {\r\n        tableData: dummyData,\r\n        columnType: 'wrap',\r\n    },\r\n    render: (args) => ({\r\n        props: args,\r\n        template: `\r\n            <nctv-card [shadowLevel]=\"shadowLevel\">\r\n                <nctv-table [tableData]=\"tableData\" [columnType]=\"columnType\"></nctv-table>\r\n            </nctv-card>\r\n        `,\r\n    }),\r\n}"
            }
        ],
        "functions": [],
        "typealiases": [
            {
                "name": "Story",
                "ctype": "miscellaneous",
                "subtype": "typealias",
                "rawtype": "StoryObj<AutocompleteComponent>",
                "file": "projects/component-pantry/src/stories/autocomplete.stories.ts",
                "deprecated": false,
                "deprecationMessage": "",
                "description": "",
                "kind": 183
            },
            {
                "name": "Story",
                "ctype": "miscellaneous",
                "subtype": "typealias",
                "rawtype": "StoryObj<ButtonComponent>",
                "file": "projects/component-pantry/src/stories/button.stories.ts",
                "deprecated": false,
                "deprecationMessage": "",
                "description": "",
                "kind": 183
            },
            {
                "name": "Story",
                "ctype": "miscellaneous",
                "subtype": "typealias",
                "rawtype": "StoryObj<CardComponent>",
                "file": "projects/component-pantry/src/stories/card.stories.ts",
                "deprecated": false,
                "deprecationMessage": "",
                "description": "",
                "kind": 183
            },
            {
                "name": "Story",
                "ctype": "miscellaneous",
                "subtype": "typealias",
                "rawtype": "StoryObj<InputComponent>",
                "file": "projects/component-pantry/src/stories/input.stories.ts",
                "deprecated": false,
                "deprecationMessage": "",
                "description": "",
                "kind": 183
            },
            {
                "name": "Story",
                "ctype": "miscellaneous",
                "subtype": "typealias",
                "rawtype": "StoryObj<StepperComponent>",
                "file": "projects/component-pantry/src/stories/stepper.stories.ts",
                "deprecated": false,
                "deprecationMessage": "",
                "description": "",
                "kind": 183
            },
            {
                "name": "Story",
                "ctype": "miscellaneous",
                "subtype": "typealias",
                "rawtype": "StoryObj<TableComponent>",
                "file": "projects/component-pantry/src/stories/table.stories.ts",
                "deprecated": false,
                "deprecationMessage": "",
                "description": "",
                "kind": 183
            },
            {
                "name": "Story",
                "ctype": "miscellaneous",
                "subtype": "typealias",
                "rawtype": "StoryObj<TextComponent>",
                "file": "projects/component-pantry/src/stories/text.stories.ts",
                "deprecated": false,
                "deprecationMessage": "",
                "description": "",
                "kind": 183
            }
        ],
        "enumerations": [],
        "groupedVariables": {
            "projects/component-pantry/src/stories/autocomplete.stories.ts": [
                {
                    "name": "Basic",
                    "ctype": "miscellaneous",
                    "subtype": "variable",
                    "file": "projects/component-pantry/src/stories/autocomplete.stories.ts",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "type": "Story",
                    "defaultValue": "{\r\n    args: {\r\n        inputSize: 'medium',\r\n        label: 'Autocomplete Field (Dynamic)',\r\n        placeholder: 'Search Keyword',\r\n        autocompleteData: dummyDataCountry,\r\n        leftIconSvg: `<svg viewBox=\"0 0 24 24\" fill=\"none\" xmlns=\"http://www.w3.org/2000/svg\" width=\"20px\">\r\n            <path d=\"M15.7955 15.8111L21 21M18 10.5C18 14.6421 14.6421 18 10.5 18C6.35786 18 3 14.6421 3 10.5C3 6.35786 6.35786 3 10.5 3C14.6421 3 18 6.35786 18 10.5Z\" stroke-width=\"2\" stroke-linecap=\"round\" stroke-linejoin=\"round\" />\r\n        </svg>`,\r\n        rightIconSvg: `<svg width=\"15\" viewBox=\"0 0 18 10\" fill=\"none\" xmlns=\"http://www.w3.org/2000/svg\">\r\n        <path \r\n          clip-rule=\"evenodd\"\r\n          d=\"M9.53033 9.28033C9.23744 9.57322 8.76256 9.57322 8.46967 9.28033L0.96967 1.78033C0.676777 1.48744 0.676777 1.01256 0.96967 0.719671C1.26256 0.426777 1.73744 0.426777 2.03033 0.719671L9 7.68934L15.9697 0.71967C16.2626 0.426777 16.7374 0.426777 17.0303 0.71967C17.3232 1.01256 17.3232 1.48744 17.0303 1.78033L9.53033 9.28033Z\" \r\n        >\r\n        </path>\r\n      </svg>`,\r\n    },\r\n    render: (args) => ({\r\n        props: args,\r\n        template: `\r\n            <nctv-card [shadowLevel]=\"shadowLevel\" [size]=\"auto\">\r\n                <nctv-autocomplete\r\n                    [inputSize]=\"inputSize\"\r\n                    [label]=\"label\"\r\n                    [placeholder]=\"placeholder\"\r\n                    [autocompleteData]=\"autocompleteData\"\r\n                    [leftIconSvg]=\"leftIconSvg\"\r\n                    [rightIconSvg]=\"rightIconSvg\"\r\n                >\r\n                </nctv-autocomplete>\r\n            </nctv-card>\r\n        `,\r\n    }),\r\n}"
                },
                {
                    "name": "DemoAutocomplete",
                    "ctype": "miscellaneous",
                    "subtype": "variable",
                    "file": "projects/component-pantry/src/stories/autocomplete.stories.ts",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "type": "Story",
                    "defaultValue": "{\r\n    args: {\r\n        inputSize: 'medium',\r\n        label: 'Autocomplete Field (Dynamic)',\r\n        placeholder: 'Autocomplete Field Placeholder (Dynamic)',\r\n\r\n        autocompleteData: dummyDataCountry,\r\n    },\r\n    render: (args) => ({\r\n        props: args,\r\n        template: `\r\n            <nctv-card [shadowLevel]=\"shadowLevel\">\r\n              <div style=\"display: flex; gap: 20px;\">\r\n                <nctv-autocomplete [inputSize]=\"inputSize\" style=\"width: 100%;\" [placeholder]=\"placeholder\" [autocompleteData]=\"autocompleteData\">\r\n                </nctv-autocomplete>\r\n\r\n                <nctv-autocomplete [inputSize]=\"inputSize\" style=\"width: 100%;\" [label]=\"'Second autocomplete (Static)'\" [placeholder]=\"'Select animal (Static)'\" [autocompleteData]=\"[{id: '1', name: 'Lion', species: 'Panthera leo'}, {id: '2', name: 'Tiger', species: 'Panthera tigris'}, {id: '3', name: 'Elephant', species: 'Loxodonta'}, {id: '4', name: 'Giraffe', species: 'Giraffa camelopardalis'}, {id: '5', name: 'Zebra', species: 'Equus zebra'}]\">\r\n                </nctv-autocomplete>\r\n              </div>\r\n            </nctv-card>\r\n        `,\r\n    }),\r\n}"
                },
                {
                    "name": "dummyDataCountry",
                    "ctype": "miscellaneous",
                    "subtype": "variable",
                    "file": "projects/component-pantry/src/stories/autocomplete.stories.ts",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "type": "[]",
                    "defaultValue": "[\r\n    { id: 'abc123', name: 'Afghanistan', code: 'AF' },\r\n    { id: 'def456', name: 'Åland Islands', code: 'AX' },\r\n    { id: 'ghi789', name: 'Albania', code: 'AL' },\r\n    { id: 'jkl012', name: 'Algeria', code: 'DZ' },\r\n    { id: 'mno345', name: 'American Samoa', code: 'AS' },\r\n    { id: 'pqr678', name: 'AndorrA', code: 'AD' },\r\n]"
                },
                {
                    "name": "meta",
                    "ctype": "miscellaneous",
                    "subtype": "variable",
                    "file": "projects/component-pantry/src/stories/autocomplete.stories.ts",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "type": "Meta<AutocompleteComponent>",
                    "defaultValue": "{\r\n    title: 'Components/Autocomplete',\r\n    component: AutocompleteComponent,\r\n    decorators: [\r\n        moduleMetadata({\r\n            imports: [CommonModule, CardComponent, InputComponent, ButtonComponent],\r\n        }),\r\n    ],\r\n    tags: ['autodocs'],\r\n    parameters: {},\r\n    argTypes: {\r\n        inputSize: {\r\n            control: 'select',\r\n            description: 'Used to set input size.',\r\n            options: INPUT_SIZE,\r\n            table: {\r\n                defaultValue: {\r\n                    summary: 'medium',\r\n                },\r\n            },\r\n        },\r\n        leftIconSvg: {\r\n            control: {\r\n                type: 'text', // Use the 'text' control for SVG input\r\n                // Optional, but recommended for a better UX:\r\n                labels: {\r\n                    control: 'Left Icon SVG',\r\n                    description: 'Input the SVG code for the left icon.',\r\n                },\r\n            },\r\n        },\r\n        rightIconSvg: {\r\n            control: {\r\n                type: 'text',\r\n                // Optional labels for better UX:\r\n                labels: {\r\n                    control: 'Right Icon SVG',\r\n                    description: 'Input the SVG code for the right icon.',\r\n                },\r\n            },\r\n        },\r\n    },\r\n}"
                },
                {
                    "name": "MultipleAutocomplete",
                    "ctype": "miscellaneous",
                    "subtype": "variable",
                    "file": "projects/component-pantry/src/stories/autocomplete.stories.ts",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "type": "Story",
                    "defaultValue": "{\r\n    args: {\r\n        inputSize: 'small',\r\n        label: 'Autocomplete Field (Dynamic)',\r\n        placeholder: 'Autocomplete Field Placeholder (Dynamic)',\r\n\r\n        autocompleteData: dummyDataCountry,\r\n    },\r\n    render: (args) => ({\r\n        props: args,\r\n        template: `\r\n        <nctv-card [shadowLevel]=\"shadowLevel\">\r\n            <div style=\"display: grid; grid-template-columns: repeat(auto-fit, minmax(250px, 1fr)); gap: 20px;\">\r\n                <nctv-autocomplete [inputSize]=\"inputSize\" [label]=\"label\" [placeholder]=\"placeholder\" [autocompleteData]=\"autocompleteData\">\r\n                </nctv-autocomplete>\r\n                \r\n                <nctv-input [label]=\"label\" [inputSize]=\"inputSize\" [placeholder]=\"placeholder\"></nctv-input>\r\n                \r\n                <nctv-input [label]=\"'I am a label (Static)'\" [inputSize]=\"inputSize\" [placeholder]=\"'I am a placeholder (Static)'\"></nctv-input>\r\n                \r\n                <nctv-input [label]=\"label\" [inputSize]=\"inputSize\" [placeholder]=\"placeholder\"></nctv-input>\r\n\r\n                <nctv-autocomplete [inputSize]=\"inputSize\" [label]=\"'Second autocomplete (Static)'\" [placeholder]=\"'Select animal (Static)'\" [autocompleteData]=\"[{id: '1', name: 'Lion', species: 'Panthera leo'}, {id: '2', name: 'Tiger', species: 'Panthera tigris'}, {id: '3', name: 'Elephant', species: 'Loxodonta'}, {id: '4', name: 'Giraffe', species: 'Giraffa camelopardalis'}, {id: '5', name: 'Zebra', species: 'Equus zebra'}]\">\r\n                </nctv-autocomplete>              \r\n                \r\n                <nctv-input [label]=\"'I am a label (Static)'\" [inputSize]=\"inputSize\" [placeholder]=\"'I am a placeholder (Static)'\"></nctv-input>\r\n                \r\n                <nctv-autocomplete [inputSize]=\"inputSize\" [label]=\"'Second autocomplete (Static)'\" [placeholder]=\"'Select animal (Static)'\" [autocompleteData]=\"[{id: '1', name: 'Lion', species: 'Panthera leo'}, {id: '2', name: 'Tiger', species: 'Panthera tigris'}, {id: '3', name: 'Elephant', species: 'Loxodonta'}, {id: '4', name: 'Giraffe', species: 'Giraffa camelopardalis'}, {id: '5', name: 'Zebra', species: 'Equus zebra'}]\">\r\n                </nctv-autocomplete>\r\n\r\n                <nctv-input [label]=\"'I am a label (Static)'\" [inputSize]=\"inputSize\" [placeholder]=\"'I am a placeholder (Static)'\"></nctv-input>\r\n                \r\n                <nctv-autocomplete [inputSize]=\"inputSize\" [label]=\"'Second autocomplete (Static)'\" [placeholder]=\"'Select animal (Static)'\" [autocompleteData]=\"[{id: '1', name: 'Lion', species: 'Panthera leo'}, {id: '2', name: 'Tiger', species: 'Panthera tigris'}, {id: '3', name: 'Elephant', species: 'Loxodonta'}, {id: '4', name: 'Giraffe', species: 'Giraffa camelopardalis'}, {id: '5', name: 'Zebra', species: 'Equus zebra'}]\">\r\n                </nctv-autocomplete>\r\n            </div>\r\n        </nctv-card>\r\n        `,\r\n    }),\r\n}"
                }
            ],
            "projects/component-pantry/src/stories/card.stories.ts": [
                {
                    "name": "Basic",
                    "ctype": "miscellaneous",
                    "subtype": "variable",
                    "file": "projects/component-pantry/src/stories/card.stories.ts",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "type": "Story",
                    "defaultValue": "{\r\n    args: {\r\n        shadowLevel: 1,\r\n        backgroundColor: '#fff',\r\n    },\r\n    render: (args) => ({\r\n        props: args,\r\n        template: `\r\n            <nctv-card [shadowLevel]=\"shadowLevel\" [backgroundColor]=\"backgroundColor\">\r\n                <div [style.margin-bottom.px]=\"'20'\">\r\n                    <nctv-text\r\n                    [textType]=\"'larger'\"\r\n                    [textContent]=\"'Hello World!'\">\r\n                    </nctv-text>\r\n                </div>\r\n\r\n                <div>\r\n                    <nctv-text\r\n                    [textContent]=\"'Lorem ipsum keme keme keme 48 years chaka at bakit na ugmas mabaho nang kasi balaj sa na pranella jupang-pang shontis chapter jowabella at ang chaka at nang guash matod kasi nakakalurky na ang neuro na warla nang ugmas wasok nang shonget ang chapter , kemerloo ang shontis ng at ang intonses at nang wasok oblation sa nang 48 years shontis at bakit mahogany bongga.'\">\r\n                    </nctv-text>\r\n                </div>\r\n            </nctv-card>\r\n        `,\r\n    }),\r\n}"
                },
                {
                    "name": "CustomBackground",
                    "ctype": "miscellaneous",
                    "subtype": "variable",
                    "file": "projects/component-pantry/src/stories/card.stories.ts",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "type": "Story",
                    "defaultValue": "{\r\n    args: {\r\n        shadowLevel: 5,\r\n        backgroundColor: '#224d32',\r\n    },\r\n    render: (args) => ({\r\n        props: args,\r\n        template: `\r\n            <nctv-card [shadowLevel]=\"shadowLevel\" [backgroundColor]=\"backgroundColor\">\r\n                <div [style.margin-bottom.px]=\"'20'\">\r\n                    <nctv-text\r\n                    [textColor]=\"'#fff'\"\r\n                    [textType]=\"'larger'\"\r\n                    [textContent]=\"'Hello World!'\">\r\n                    </nctv-text>\r\n                </div>\r\n\r\n                <div [style.margin-bottom.px]=\"'20'\">\r\n                    <nctv-text\r\n                    [textColor]=\"'#fff'\"\r\n                    [textContent]=\"'Lorem ipsum keme keme keme 48 years chaka at bakit na ugmas mabaho nang kasi balaj sa na pranella jupang-pang shontis chapter jowabella at ang chaka at nang guash matod kasi nakakalurky na ang neuro na warla nang ugmas wasok nang shonget ang chapter , kemerloo ang shontis ng at ang intonses at nang wasok oblation sa nang 48 years shontis at bakit mahogany bongga.'\"\r\n                    [textType]=\"'paragraph'\">\r\n                    </nctv-text>\r\n                </div>\r\n\r\n\r\n                <nctv-button\r\n                [label]=\"'Purchase'\"\r\n                [textColor]=\"'#fff'\"\r\n                [type]=\"'success'\"\r\n                ></nctv-button>\r\n            </nctv-card>\r\n        `,\r\n    }),\r\n}"
                },
                {
                    "name": "CustomPaddings",
                    "ctype": "miscellaneous",
                    "subtype": "variable",
                    "file": "projects/component-pantry/src/stories/card.stories.ts",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "type": "Story",
                    "defaultValue": "{\r\n    args: {\r\n        shadowLevel: 5,\r\n        backgroundColor: '#fff',\r\n    },\r\n    render: (args) => ({\r\n        props: args,\r\n        template: `\r\n            <nctv-card [shadowLevel]=\"shadowLevel\" [backgroundColor]=\"backgroundColor\" [sidePadding]=\"50\">\r\n                <div [style.margin-bottom.px]=\"'20'\">\r\n                    <nctv-text\r\n                    [textType]=\"'larger'\"\r\n                    [textContent]=\"'Hello World!'\">\r\n                    </nctv-text>\r\n                </div>\r\n\r\n                <div>\r\n                    <nctv-text\r\n                    [textContent]=\"'Lorem ipsum keme keme keme 48 years chaka at bakit na ugmas mabaho nang kasi balaj sa na pranella jupang-pang shontis chapter jowabella at ang chaka at nang guash matod kasi nakakalurky na ang neuro na warla nang ugmas wasok nang shonget ang chapter , kemerloo ang shontis ng at ang intonses at nang wasok oblation sa nang 48 years shontis at bakit mahogany bongga.'\"\r\n                    [textType]=\"'paragraph'\">\r\n                    </nctv-text>\r\n                </div>\r\n            </nctv-card>\r\n        `,\r\n    }),\r\n}"
                },
                {
                    "name": "meta",
                    "ctype": "miscellaneous",
                    "subtype": "variable",
                    "file": "projects/component-pantry/src/stories/card.stories.ts",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "type": "Meta<CardComponent>",
                    "defaultValue": "{\r\n    title: 'Components/Card',\r\n    component: CardComponent,\r\n    decorators: [\r\n        moduleMetadata({\r\n            imports: [CommonModule, ButtonComponent, TextComponent],\r\n        }),\r\n    ],\r\n    tags: ['autodocs'],\r\n    parameters: {},\r\n    argTypes: {\r\n        shadowLevel: {\r\n            control: 'select',\r\n            description: 'Used to set shadow level, the higher the value the more prominent the shadow is.',\r\n            options: CARD_SHADOWS,\r\n        },\r\n        backgroundColor: {\r\n            control: 'color',\r\n            description: 'Sets the background color of the card.',\r\n        },\r\n        cardSize: {\r\n            control: 'select',\r\n            description: 'Sets the side size of the card.',\r\n            options: CARD_SIZE,\r\n        },\r\n    },\r\n}"
                },
                {
                    "name": "ShadowLevel3",
                    "ctype": "miscellaneous",
                    "subtype": "variable",
                    "file": "projects/component-pantry/src/stories/card.stories.ts",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "type": "Story",
                    "defaultValue": "{\r\n    args: {\r\n        shadowLevel: 3,\r\n        backgroundColor: '#fff',\r\n    },\r\n    render: (args) => ({\r\n        props: args,\r\n        template: `\r\n            <nctv-card [shadowLevel]=\"shadowLevel\" [backgroundColor]=\"backgroundColor\">\r\n                <div [style.margin-bottom.px]=\"'20'\">\r\n                    <nctv-text\r\n                    [textType]=\"'larger'\"\r\n                    [textContent]=\"'Hello World!'\">\r\n                    </nctv-text>\r\n                </div>\r\n\r\n                <div>\r\n                    <nctv-text\r\n                    [textContent]=\"'Lorem ipsum keme keme keme 48 years chaka at bakit na ugmas mabaho nang kasi balaj sa na pranella jupang-pang shontis chapter jowabella at ang chaka at nang guash matod kasi nakakalurky na ang neuro na warla nang ugmas wasok nang shonget ang chapter , kemerloo ang shontis ng at ang intonses at nang wasok oblation sa nang 48 years shontis at bakit mahogany bongga.'\">\r\n                    </nctv-text>\r\n                </div>\r\n            </nctv-card>\r\n        `,\r\n    }),\r\n}"
                }
            ],
            "projects/component-pantry/src/stories/input.stories.ts": [
                {
                    "name": "Basic",
                    "ctype": "miscellaneous",
                    "subtype": "variable",
                    "file": "projects/component-pantry/src/stories/input.stories.ts",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "type": "Story",
                    "defaultValue": "{\r\n    args: {\r\n        inputSize: 'medium',\r\n        label: 'Input Label',\r\n        placeholder: 'Default Input Placeholder'\r\n    },\r\n    render: (args) => ({\r\n        props: args,\r\n        template: `\r\n            <nctv-card [shadowLevel]=\"shadowLevel\">\r\n               <nctv-input [label]=\"label\" [inputSize]=\"inputSize\" [placeholder]=\"placeholder\"></nctv-input>\r\n            </nctv-card>\r\n        `,\r\n    }),\r\n}"
                },
                {
                    "name": "meta",
                    "ctype": "miscellaneous",
                    "subtype": "variable",
                    "file": "projects/component-pantry/src/stories/input.stories.ts",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "type": "Meta<InputComponent>",
                    "defaultValue": "{\r\n    title: 'Components/Input',\r\n    component: InputComponent,\r\n    decorators: [\r\n        moduleMetadata({\r\n            imports: [CommonModule, CardComponent],\r\n        }),\r\n    ],\r\n    tags: ['autodocs'],\r\n    parameters: {},\r\n    argTypes: {\r\n        inputSize: {\r\n            control: 'select',\r\n            description: 'Used to set input size.',\r\n            options: INPUT_SIZE,\r\n            table: {\r\n                defaultValue: {\r\n                    summary: 'medium',\r\n                },\r\n            },\r\n        },\r\n    },\r\n}"
                }
            ],
            "projects/component-pantry/src/stories/stepper.stories.ts": [
                {
                    "name": "Basic",
                    "ctype": "miscellaneous",
                    "subtype": "variable",
                    "file": "projects/component-pantry/src/stories/stepper.stories.ts",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "type": "Story",
                    "defaultValue": "{\r\n    args: {\r\n        orientation: 'vertical' as unknown as InputSignal<string>,\r\n        clickable: true as unknown as InputSignal<boolean>,\r\n        showSteps: true as unknown as InputSignal<boolean>,\r\n        steps: [\r\n            { label: 'Create Screen', completed: true },\r\n            { label: 'Choose Template', completed: false },\r\n            { label: 'Assign Playlist', completed: false },\r\n            { label: 'Assign Host', completed: true },\r\n            { label: 'Assign Dealer', completed: true },\r\n        ] as unknown as InputSignal<{ label: string; completed: boolean }[]>,\r\n        currentStep: 0,\r\n    },\r\n    render: (args) => ({\r\n        props: {\r\n            ...args,\r\n            onNext: () => {\r\n                if (args.currentStep < args.steps.length - 1) {\r\n                    args.currentStep += 1;\r\n                }\r\n            },\r\n            onBack: () => {\r\n                if (args.currentStep > 0) {\r\n                    args.currentStep -= 1;\r\n                }\r\n            },\r\n        },\r\n        template: `\r\n        <ng-container>\r\n            <div *ngIf=\"orientation === 'vertical'; else horizontalOrientation\" style=\"height: 500px;\">\r\n                <nctv-card [cardSize]=\"'fit-content'\" [backgroundColor]=\"'#091635'\">\r\n                    <div style=\"display: flex; gap: 10px; height: 100%; flex-direction: column; align-items:center;\">\r\n\r\n\r\n                        <div style=\"height: 100%;\">\r\n                            <nctv-stepper\r\n                                [clickable]=\"clickable\"\r\n                                [steps]=\"steps\"\r\n                                [showSteps]=\"showSteps\"\r\n                                [(currentStep)]=\"currentStep\"\r\n                                (finished)=\"onFinish()\"\r\n                                [orientation]=\"orientation\">\r\n                            </nctv-stepper>\r\n                        </div>\r\n                        \r\n                    </div>\r\n                </nctv-card>\r\n            </div>\r\n\r\n\r\n            <ng-template #horizontalOrientation>\r\n                <nctv-card>\r\n                    <div style=\"display: flex; gap: 10px; flex-direction: column;\">\r\n                        <nctv-stepper\r\n                            [clickable]=\"clickable\"\r\n                            [steps]=\"steps\"\r\n                            [showSteps]=\"showSteps\"\r\n                            [(currentStep)]=\"currentStep\"\r\n                            (finished)=\"onFinish()\"\r\n                            [orientation]=\"orientation\">\r\n                        </nctv-stepper>\r\n                    </div>\r\n                </nctv-card>\r\n            </ng-template>\r\n        </ng-container>\r\n\r\n      \r\n        `,\r\n    }),\r\n}"
                },
                {
                    "name": "meta",
                    "ctype": "miscellaneous",
                    "subtype": "variable",
                    "file": "projects/component-pantry/src/stories/stepper.stories.ts",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "type": "Meta<StepperComponent>",
                    "defaultValue": "{\r\n    title: 'Components/Stepper',\r\n    component: StepperComponent,\r\n    decorators: [\r\n        moduleMetadata({\r\n            imports: [CommonModule, ButtonComponent, CardComponent],\r\n        }),\r\n    ],\r\n    tags: ['autodocs'],\r\n    parameters: {},\r\n    argTypes: {\r\n        orientation: {\r\n            control: 'select',\r\n            description: 'Used to select orientation.',\r\n            options: ORIENTATION,\r\n            table: {\r\n                defaultValue: {\r\n                    summary: 'horizontal',\r\n                },\r\n            },\r\n        },\r\n        showSteps: {\r\n            control: 'select',\r\n            description: 'Used to show the steps.',\r\n            options: SHOW_STEPS,\r\n            table: {\r\n                defaultValue: {\r\n                    summary: false,\r\n                },\r\n            },\r\n        },\r\n        clickable: {\r\n            control: 'select',\r\n            description: 'Used to make the steps clickable to go to a specific step.',\r\n            options: SHOW_STEPS,\r\n            table: {\r\n                defaultValue: {\r\n                    summary: false,\r\n                },\r\n            },\r\n        },\r\n    },\r\n}"
                }
            ],
            "projects/component-pantry/src/stories/table.stories.ts": [
                {
                    "name": "Basic",
                    "ctype": "miscellaneous",
                    "subtype": "variable",
                    "file": "projects/component-pantry/src/stories/table.stories.ts",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "type": "Story",
                    "defaultValue": "{\r\n    args: {\r\n        tableData: dummyData,\r\n    },\r\n    render: (args) => ({\r\n        props: args,\r\n        template: `\r\n            <nctv-card [shadowLevel]=\"shadowLevel\">\r\n                <nctv-table [tableData]=\"tableData\" [columnType]=\"columnType\"></nctv-table>\r\n            </nctv-card>\r\n        `,\r\n    }),\r\n}"
                },
                {
                    "name": "dummyData",
                    "ctype": "miscellaneous",
                    "subtype": "variable",
                    "file": "projects/component-pantry/src/stories/table.stories.ts",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "type": "object",
                    "defaultValue": "{\r\n    columns: [\r\n        { label: '#', sortable: false },\r\n        { label: 'Host Name', sortable: false },\r\n        { label: 'Dealer Name', sortable: false },\r\n        { label: 'Address', sortable: true },\r\n        { label: 'City', sortable: true },\r\n        { label: 'State', sortable: true },\r\n        { label: 'Postal Code', sortable: true },\r\n        { label: 'Timezone', sortable: true },\r\n        { label: 'Total License', sortable: true },\r\n    ],\r\n    rows: [\r\n        [\r\n            {\r\n                value: 1,\r\n            },\r\n            {\r\n                value: 'Amazon Data Center',\r\n            },\r\n            {\r\n                value: 'Sunrise Motors Inc.',\r\n            },\r\n            {\r\n                value: '456 Elm Street Apt. 201',\r\n            },\r\n            {\r\n                value: 'Seattle',\r\n            },\r\n            {\r\n                value: 'Washington',\r\n            },\r\n            {\r\n                value: '98101',\r\n            },\r\n            {\r\n                value: 'Pacific',\r\n            },\r\n            {\r\n                value: 15,\r\n            },\r\n        ],\r\n        [\r\n            {\r\n                value: 2,\r\n            },\r\n            {\r\n                value: 'Microsoft Headquarters',\r\n            },\r\n            {\r\n                value: 'Sunset Electronics',\r\n            },\r\n            {\r\n                value: '789 Oak Avenue',\r\n            },\r\n            {\r\n                value: 'Redmond',\r\n            },\r\n            {\r\n                value: 'Washington',\r\n            },\r\n            {\r\n                value: '98052',\r\n            },\r\n            {\r\n                value: 'Pacific',\r\n            },\r\n            {\r\n                value: 20,\r\n            },\r\n        ],\r\n        [\r\n            {\r\n                value: 3,\r\n            },\r\n            {\r\n                value: 'Googleplex',\r\n            },\r\n            {\r\n                value: 'Skyline Solutions',\r\n            },\r\n            {\r\n                value: '123 Maple Street',\r\n            },\r\n            {\r\n                value: 'Mountain View',\r\n            },\r\n            {\r\n                value: 'California',\r\n            },\r\n            {\r\n                value: '94043',\r\n            },\r\n            {\r\n                value: 'Eastern',\r\n            },\r\n            {\r\n                value: 30,\r\n            },\r\n        ],\r\n        [\r\n            {\r\n                value: 4,\r\n            },\r\n            {\r\n                value: 'Apple Park',\r\n            },\r\n            {\r\n                value: 'Orchard Technologies',\r\n            },\r\n            {\r\n                value: '567 Pine Road',\r\n            },\r\n            {\r\n                value: 'Cupertino',\r\n            },\r\n            {\r\n                value: 'California',\r\n            },\r\n            {\r\n                value: '95014',\r\n            },\r\n            {\r\n                value: 'Mountain',\r\n            },\r\n            {\r\n                value: 25,\r\n            },\r\n        ],\r\n        [\r\n            {\r\n                value: 5,\r\n            },\r\n            {\r\n                value: 'Facebook Campus',\r\n            },\r\n            {\r\n                value: 'Social Solutions',\r\n            },\r\n            {\r\n                value: '101 Cedar Lane',\r\n            },\r\n            {\r\n                value: 'Menlo Park',\r\n            },\r\n            {\r\n                value: 'California',\r\n            },\r\n            {\r\n                value: '94025',\r\n            },\r\n            {\r\n                value: 'Pacific',\r\n            },\r\n            {\r\n                value: 18,\r\n            },\r\n        ],\r\n    ],\r\n}"
                },
                {
                    "name": "Ellipsis",
                    "ctype": "miscellaneous",
                    "subtype": "variable",
                    "file": "projects/component-pantry/src/stories/table.stories.ts",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "type": "Story",
                    "defaultValue": "{\r\n    args: {\r\n        tableData: dummyData,\r\n        columnType: 'ellipsis',\r\n    },\r\n    render: (args) => ({\r\n        props: args,\r\n        template: `\r\n            <nctv-card [shadowLevel]=\"shadowLevel\">\r\n                <nctv-table [tableData]=\"tableData\" [columnType]=\"columnType\"></nctv-table>\r\n            </nctv-card>\r\n        `,\r\n    }),\r\n}"
                },
                {
                    "name": "meta",
                    "ctype": "miscellaneous",
                    "subtype": "variable",
                    "file": "projects/component-pantry/src/stories/table.stories.ts",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "type": "Meta<TableComponent>",
                    "defaultValue": "{\r\n    title: 'Components/Table',\r\n    component: TableComponent,\r\n    decorators: [\r\n        moduleMetadata({\r\n            imports: [CommonModule, CardComponent],\r\n        }),\r\n    ],\r\n    tags: ['autodocs'],\r\n    parameters: {},\r\n    argTypes: {\r\n        columnType: {\r\n            control: 'select',\r\n            description: 'Used to set table type.',\r\n            options: COLUMN_TYPE,\r\n            table: {\r\n                defaultValue: {\r\n                    summary: 'Full',\r\n                },\r\n            },\r\n        },\r\n        tableData: {\r\n            control: 'select',\r\n            description: 'Used to set shadow level, the higher the value the more prominent the shadow is.',\r\n        },\r\n    },\r\n}"
                },
                {
                    "name": "Wrap",
                    "ctype": "miscellaneous",
                    "subtype": "variable",
                    "file": "projects/component-pantry/src/stories/table.stories.ts",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "type": "Story",
                    "defaultValue": "{\r\n    args: {\r\n        tableData: dummyData,\r\n        columnType: 'wrap',\r\n    },\r\n    render: (args) => ({\r\n        props: args,\r\n        template: `\r\n            <nctv-card [shadowLevel]=\"shadowLevel\">\r\n                <nctv-table [tableData]=\"tableData\" [columnType]=\"columnType\"></nctv-table>\r\n            </nctv-card>\r\n        `,\r\n    }),\r\n}"
                }
            ],
            "projects/component-pantry/src/stories/text.stories.ts": [
                {
                    "name": "BoldColored",
                    "ctype": "miscellaneous",
                    "subtype": "variable",
                    "file": "projects/component-pantry/src/stories/text.stories.ts",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "type": "Story",
                    "defaultValue": "{\r\n    args: {\r\n        textContent: 'Wow such color, much thick!',\r\n        textType: 'large',\r\n        textColor: '#098a5a',\r\n        fontWeight: 'bold',\r\n    },\r\n}"
                },
                {
                    "name": "CustomFontSize",
                    "ctype": "miscellaneous",
                    "subtype": "variable",
                    "file": "projects/component-pantry/src/stories/text.stories.ts",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "type": "Story",
                    "defaultValue": "{\r\n    args: {\r\n        textContent: 'Such amaze, many font size!',\r\n        fontSize: 50,\r\n        textColor: '#342abd',\r\n    },\r\n}"
                },
                {
                    "name": "Larger",
                    "ctype": "miscellaneous",
                    "subtype": "variable",
                    "file": "projects/component-pantry/src/stories/text.stories.ts",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "type": "Story",
                    "defaultValue": "{\r\n    args: {\r\n        textContent: 'Dis large, such heavy',\r\n        textType: 'larger',\r\n    },\r\n}"
                },
                {
                    "name": "meta",
                    "ctype": "miscellaneous",
                    "subtype": "variable",
                    "file": "projects/component-pantry/src/stories/text.stories.ts",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "type": "Meta<TextComponent>",
                    "defaultValue": "{\r\n    title: 'Components/Text',\r\n    component: TextComponent,\r\n    tags: ['autodocs'],\r\n    argTypes: {\r\n        fontSize: {\r\n            control: 'number',\r\n            description: `Specifies the font size of the text, overwrites the text type's font size (px). Accepts any valid CSS font-size value.`,\r\n        },\r\n        fontWeight: {\r\n            control: 'select',\r\n            description: `Specifies the font weight of the text, overwrites the text type's font weight.`,\r\n            options: FONT_WEIGHTS,\r\n            table: {\r\n                defaultValue: {\r\n                    summary: 'normal',\r\n                },\r\n            },\r\n        },\r\n        textColor: {\r\n            control: 'color',\r\n            description: 'Specifies the text color. Accepts any valid CSS color format.',\r\n        },\r\n        textContent: {\r\n            control: 'text',\r\n            description: 'The text content to be displayed. This is the actual text that appears in the component.',\r\n            table: {\r\n                defaultValue: {\r\n                    summary: 'This is a text',\r\n                },\r\n            },\r\n        },\r\n        textType: {\r\n            control: 'select',\r\n            description: 'Specifies the type of text with pre-set font-size and font-weight.',\r\n            options: TEXT_TYPES,\r\n            table: {\r\n                defaultValue: {\r\n                    summary: 'paragraph',\r\n                },\r\n            },\r\n        },\r\n    },\r\n    args: {},\r\n}"
                },
                {
                    "name": "Paragraph",
                    "ctype": "miscellaneous",
                    "subtype": "variable",
                    "file": "projects/component-pantry/src/stories/text.stories.ts",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "type": "Story",
                    "defaultValue": "{\r\n    args: {\r\n        textContent: 'Eww such plain, much bored',\r\n        textType: 'paragraph',\r\n    },\r\n}"
                }
            ],
            "projects/component-pantry/src/stories/button.stories.ts": [
                {
                    "name": "Danger",
                    "ctype": "miscellaneous",
                    "subtype": "variable",
                    "file": "projects/component-pantry/src/stories/button.stories.ts",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "type": "Story",
                    "defaultValue": "{\r\n    args: {\r\n        label: 'Delete',\r\n        type: 'danger',\r\n    },\r\n}"
                },
                {
                    "name": "Disabled",
                    "ctype": "miscellaneous",
                    "subtype": "variable",
                    "file": "projects/component-pantry/src/stories/button.stories.ts",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "type": "Story",
                    "defaultValue": "{\r\n    args: {\r\n        label: 'Not Allowed',\r\n        disabled: true,\r\n    },\r\n}"
                },
                {
                    "name": "meta",
                    "ctype": "miscellaneous",
                    "subtype": "variable",
                    "file": "projects/component-pantry/src/stories/button.stories.ts",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "type": "Meta<ButtonComponent>",
                    "defaultValue": "{\r\n    title: 'Components/Button',\r\n    component: ButtonComponent,\r\n    tags: ['autodocs'],\r\n    argTypes: {\r\n        backgroundColor: {\r\n            control: 'color',\r\n            description:\r\n                'Used to force set the background color. Note that this does not influence hover and active states unless explicitly configured.',\r\n        },\r\n        disabled: {\r\n            control: 'boolean',\r\n            description: 'Disabled state. Accepts true or false value.',\r\n            table: {\r\n                defaultValue: {\r\n                    summary: false,\r\n                },\r\n            },\r\n        },\r\n        iconLeft: {\r\n            control: 'text',\r\n            description: 'The icon to display on the left side of the label. Expected to be a valid icon reference.',\r\n        },\r\n        iconRight: {\r\n            control: 'text',\r\n            description: 'The icon to display on the right side of the label. Expected to be a valid icon reference.',\r\n        },\r\n        label: {\r\n            control: 'text',\r\n            description:\r\n                'The text to display on the button. This label can be anything from a simple string to complex HTML.',\r\n            table: {\r\n                defaultValue: {\r\n                    summary: 'Click Me',\r\n                },\r\n            },\r\n        },\r\n        size: {\r\n            control: 'select',\r\n            description: `Defines the size of the button. Accepted values are 'xsm', 'sm', 'lg', or 'normal'.`,\r\n            options: BUTTON_SIZES,\r\n            table: {\r\n                defaultValue: { summary: 'normal' },\r\n            },\r\n        },\r\n        textColor: {\r\n            control: 'color',\r\n            description:\r\n                'Used to force set the background color. Note: This does not influence hover and active states unless explicitly configured.',\r\n        },\r\n        type: {\r\n            control: 'select',\r\n            description: `Defines the type of the button, which influences its styling. Valid types are 'primary' and 'secondary'.`,\r\n            options: BUTTON_TYPES,\r\n            table: {\r\n                defaultValue: { summary: 'primary' },\r\n            },\r\n        },\r\n    },\r\n    args: {},\r\n}"
                },
                {
                    "name": "Primary",
                    "ctype": "miscellaneous",
                    "subtype": "variable",
                    "file": "projects/component-pantry/src/stories/button.stories.ts",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "type": "Story",
                    "defaultValue": "{\r\n    args: {\r\n        type: 'primary',\r\n    },\r\n}"
                },
                {
                    "name": "Success",
                    "ctype": "miscellaneous",
                    "subtype": "variable",
                    "file": "projects/component-pantry/src/stories/button.stories.ts",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "type": "Story",
                    "defaultValue": "{\r\n    args: {\r\n        textColor: '#fff',\r\n        label: 'Purchase',\r\n        type: 'success',\r\n    },\r\n}"
                }
            ],
            "projects/component-pantry/.storybook/preview.ts": [
                {
                    "name": "preview",
                    "ctype": "miscellaneous",
                    "subtype": "variable",
                    "file": "projects/component-pantry/.storybook/preview.ts",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "type": "Preview",
                    "defaultValue": "{\r\n    parameters: {\r\n        backgrounds: {\r\n            default: 'lightgray',\r\n            values: [\r\n                {\r\n                    name: 'lightgray',\r\n                    value: '#f0f0f0',\r\n                },\r\n                {\r\n                    name: 'twitter',\r\n                    value: '#00aced',\r\n                },\r\n                {\r\n                    name: 'facebook',\r\n                    value: '#3b5998',\r\n                },\r\n                {\r\n                    name: 'light',\r\n                    value: '#ffffff',\r\n                },\r\n                {\r\n                    name: 'dark',\r\n                    value: '#646c80',\r\n                },\r\n            ],\r\n        },\r\n        controls: {\r\n            matchers: {\r\n                color: /(background|color)$/i,\r\n                date: /Date$/i,\r\n            },\r\n        },\r\n    },\r\n}"
                }
            ]
        },
        "groupedFunctions": {},
        "groupedEnumerations": {},
        "groupedTypeAliases": {
            "projects/component-pantry/src/stories/autocomplete.stories.ts": [
                {
                    "name": "Story",
                    "ctype": "miscellaneous",
                    "subtype": "typealias",
                    "rawtype": "StoryObj<AutocompleteComponent>",
                    "file": "projects/component-pantry/src/stories/autocomplete.stories.ts",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "description": "",
                    "kind": 183
                }
            ],
            "projects/component-pantry/src/stories/button.stories.ts": [
                {
                    "name": "Story",
                    "ctype": "miscellaneous",
                    "subtype": "typealias",
                    "rawtype": "StoryObj<ButtonComponent>",
                    "file": "projects/component-pantry/src/stories/button.stories.ts",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "description": "",
                    "kind": 183
                }
            ],
            "projects/component-pantry/src/stories/card.stories.ts": [
                {
                    "name": "Story",
                    "ctype": "miscellaneous",
                    "subtype": "typealias",
                    "rawtype": "StoryObj<CardComponent>",
                    "file": "projects/component-pantry/src/stories/card.stories.ts",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "description": "",
                    "kind": 183
                }
            ],
            "projects/component-pantry/src/stories/input.stories.ts": [
                {
                    "name": "Story",
                    "ctype": "miscellaneous",
                    "subtype": "typealias",
                    "rawtype": "StoryObj<InputComponent>",
                    "file": "projects/component-pantry/src/stories/input.stories.ts",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "description": "",
                    "kind": 183
                }
            ],
            "projects/component-pantry/src/stories/stepper.stories.ts": [
                {
                    "name": "Story",
                    "ctype": "miscellaneous",
                    "subtype": "typealias",
                    "rawtype": "StoryObj<StepperComponent>",
                    "file": "projects/component-pantry/src/stories/stepper.stories.ts",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "description": "",
                    "kind": 183
                }
            ],
            "projects/component-pantry/src/stories/table.stories.ts": [
                {
                    "name": "Story",
                    "ctype": "miscellaneous",
                    "subtype": "typealias",
                    "rawtype": "StoryObj<TableComponent>",
                    "file": "projects/component-pantry/src/stories/table.stories.ts",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "description": "",
                    "kind": 183
                }
            ],
            "projects/component-pantry/src/stories/text.stories.ts": [
                {
                    "name": "Story",
                    "ctype": "miscellaneous",
                    "subtype": "typealias",
                    "rawtype": "StoryObj<TextComponent>",
                    "file": "projects/component-pantry/src/stories/text.stories.ts",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "description": "",
                    "kind": 183
                }
            ]
        }
    },
    "routes": [],
    "coverage": {
        "count": 0,
        "status": "low",
        "files": [
            {
                "filePath": "projects/component-pantry/.storybook/preview.ts",
                "type": "variable",
                "linktype": "miscellaneous",
                "linksubtype": "variable",
                "name": "preview",
                "coveragePercent": 0,
                "coverageCount": "0/1",
                "status": "low"
            },
            {
                "filePath": "projects/component-pantry/src/stories/autocomplete.stories.ts",
                "type": "variable",
                "linktype": "miscellaneous",
                "linksubtype": "variable",
                "name": "Basic",
                "coveragePercent": 0,
                "coverageCount": "0/1",
                "status": "low"
            },
            {
                "filePath": "projects/component-pantry/src/stories/autocomplete.stories.ts",
                "type": "variable",
                "linktype": "miscellaneous",
                "linksubtype": "variable",
                "name": "DemoAutocomplete",
                "coveragePercent": 0,
                "coverageCount": "0/1",
                "status": "low"
            },
            {
                "filePath": "projects/component-pantry/src/stories/autocomplete.stories.ts",
                "type": "variable",
                "linktype": "miscellaneous",
                "linksubtype": "variable",
                "name": "dummyDataCountry",
                "coveragePercent": 0,
                "coverageCount": "0/1",
                "status": "low"
            },
            {
                "filePath": "projects/component-pantry/src/stories/autocomplete.stories.ts",
                "type": "variable",
                "linktype": "miscellaneous",
                "linksubtype": "variable",
                "name": "meta",
                "coveragePercent": 0,
                "coverageCount": "0/1",
                "status": "low"
            },
            {
                "filePath": "projects/component-pantry/src/stories/autocomplete.stories.ts",
                "type": "variable",
                "linktype": "miscellaneous",
                "linksubtype": "variable",
                "name": "MultipleAutocomplete",
                "coveragePercent": 0,
                "coverageCount": "0/1",
                "status": "low"
            },
            {
                "filePath": "projects/component-pantry/src/stories/button.stories.ts",
                "type": "variable",
                "linktype": "miscellaneous",
                "linksubtype": "variable",
                "name": "Danger",
                "coveragePercent": 0,
                "coverageCount": "0/1",
                "status": "low"
            },
            {
                "filePath": "projects/component-pantry/src/stories/button.stories.ts",
                "type": "variable",
                "linktype": "miscellaneous",
                "linksubtype": "variable",
                "name": "Disabled",
                "coveragePercent": 0,
                "coverageCount": "0/1",
                "status": "low"
            },
            {
                "filePath": "projects/component-pantry/src/stories/button.stories.ts",
                "type": "variable",
                "linktype": "miscellaneous",
                "linksubtype": "variable",
                "name": "meta",
                "coveragePercent": 0,
                "coverageCount": "0/1",
                "status": "low"
            },
            {
                "filePath": "projects/component-pantry/src/stories/button.stories.ts",
                "type": "variable",
                "linktype": "miscellaneous",
                "linksubtype": "variable",
                "name": "Primary",
                "coveragePercent": 0,
                "coverageCount": "0/1",
                "status": "low"
            },
            {
                "filePath": "projects/component-pantry/src/stories/button.stories.ts",
                "type": "variable",
                "linktype": "miscellaneous",
                "linksubtype": "variable",
                "name": "Success",
                "coveragePercent": 0,
                "coverageCount": "0/1",
                "status": "low"
            },
            {
                "filePath": "projects/component-pantry/src/stories/card.stories.ts",
                "type": "variable",
                "linktype": "miscellaneous",
                "linksubtype": "variable",
                "name": "Basic",
                "coveragePercent": 0,
                "coverageCount": "0/1",
                "status": "low"
            },
            {
                "filePath": "projects/component-pantry/src/stories/card.stories.ts",
                "type": "variable",
                "linktype": "miscellaneous",
                "linksubtype": "variable",
                "name": "CustomBackground",
                "coveragePercent": 0,
                "coverageCount": "0/1",
                "status": "low"
            },
            {
                "filePath": "projects/component-pantry/src/stories/card.stories.ts",
                "type": "variable",
                "linktype": "miscellaneous",
                "linksubtype": "variable",
                "name": "CustomPaddings",
                "coveragePercent": 0,
                "coverageCount": "0/1",
                "status": "low"
            },
            {
                "filePath": "projects/component-pantry/src/stories/card.stories.ts",
                "type": "variable",
                "linktype": "miscellaneous",
                "linksubtype": "variable",
                "name": "meta",
                "coveragePercent": 0,
                "coverageCount": "0/1",
                "status": "low"
            },
            {
                "filePath": "projects/component-pantry/src/stories/card.stories.ts",
                "type": "variable",
                "linktype": "miscellaneous",
                "linksubtype": "variable",
                "name": "ShadowLevel3",
                "coveragePercent": 0,
                "coverageCount": "0/1",
                "status": "low"
            },
            {
                "filePath": "projects/component-pantry/src/stories/input.stories.ts",
                "type": "variable",
                "linktype": "miscellaneous",
                "linksubtype": "variable",
                "name": "Basic",
                "coveragePercent": 0,
                "coverageCount": "0/1",
                "status": "low"
            },
            {
                "filePath": "projects/component-pantry/src/stories/input.stories.ts",
                "type": "variable",
                "linktype": "miscellaneous",
                "linksubtype": "variable",
                "name": "meta",
                "coveragePercent": 0,
                "coverageCount": "0/1",
                "status": "low"
            },
            {
                "filePath": "projects/component-pantry/src/stories/stepper.stories.ts",
                "type": "variable",
                "linktype": "miscellaneous",
                "linksubtype": "variable",
                "name": "Basic",
                "coveragePercent": 0,
                "coverageCount": "0/1",
                "status": "low"
            },
            {
                "filePath": "projects/component-pantry/src/stories/stepper.stories.ts",
                "type": "variable",
                "linktype": "miscellaneous",
                "linksubtype": "variable",
                "name": "meta",
                "coveragePercent": 0,
                "coverageCount": "0/1",
                "status": "low"
            },
            {
                "filePath": "projects/component-pantry/src/stories/table.stories.ts",
                "type": "variable",
                "linktype": "miscellaneous",
                "linksubtype": "variable",
                "name": "Basic",
                "coveragePercent": 0,
                "coverageCount": "0/1",
                "status": "low"
            },
            {
                "filePath": "projects/component-pantry/src/stories/table.stories.ts",
                "type": "variable",
                "linktype": "miscellaneous",
                "linksubtype": "variable",
                "name": "dummyData",
                "coveragePercent": 0,
                "coverageCount": "0/1",
                "status": "low"
            },
            {
                "filePath": "projects/component-pantry/src/stories/table.stories.ts",
                "type": "variable",
                "linktype": "miscellaneous",
                "linksubtype": "variable",
                "name": "Ellipsis",
                "coveragePercent": 0,
                "coverageCount": "0/1",
                "status": "low"
            },
            {
                "filePath": "projects/component-pantry/src/stories/table.stories.ts",
                "type": "variable",
                "linktype": "miscellaneous",
                "linksubtype": "variable",
                "name": "meta",
                "coveragePercent": 0,
                "coverageCount": "0/1",
                "status": "low"
            },
            {
                "filePath": "projects/component-pantry/src/stories/table.stories.ts",
                "type": "variable",
                "linktype": "miscellaneous",
                "linksubtype": "variable",
                "name": "Wrap",
                "coveragePercent": 0,
                "coverageCount": "0/1",
                "status": "low"
            },
            {
                "filePath": "projects/component-pantry/src/stories/text.stories.ts",
                "type": "variable",
                "linktype": "miscellaneous",
                "linksubtype": "variable",
                "name": "BoldColored",
                "coveragePercent": 0,
                "coverageCount": "0/1",
                "status": "low"
            },
            {
                "filePath": "projects/component-pantry/src/stories/text.stories.ts",
                "type": "variable",
                "linktype": "miscellaneous",
                "linksubtype": "variable",
                "name": "CustomFontSize",
                "coveragePercent": 0,
                "coverageCount": "0/1",
                "status": "low"
            },
            {
                "filePath": "projects/component-pantry/src/stories/text.stories.ts",
                "type": "variable",
                "linktype": "miscellaneous",
                "linksubtype": "variable",
                "name": "Larger",
                "coveragePercent": 0,
                "coverageCount": "0/1",
                "status": "low"
            },
            {
                "filePath": "projects/component-pantry/src/stories/text.stories.ts",
                "type": "variable",
                "linktype": "miscellaneous",
                "linksubtype": "variable",
                "name": "meta",
                "coveragePercent": 0,
                "coverageCount": "0/1",
                "status": "low"
            },
            {
                "filePath": "projects/component-pantry/src/stories/text.stories.ts",
                "type": "variable",
                "linktype": "miscellaneous",
                "linksubtype": "variable",
                "name": "Paragraph",
                "coveragePercent": 0,
                "coverageCount": "0/1",
                "status": "low"
            }
        ]
    }
}